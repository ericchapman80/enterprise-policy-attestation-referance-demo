name: Build Provenance Validation

on:
  workflow_dispatch:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

permissions:
  id-token: write
  attestations: write
  packages: write
  contents: write

jobs:
  validate-build-provenance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Build and push frontend image
        id: build-frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/frontend-app
          push: false
          tags: frontend:latest
          outputs: type=docker,dest=/tmp/frontend.tar
          provenance: true
          sbom: true

      - name: Build and push backend image
        id: build-backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend/backend-api
          push: false
          tags: backend:latest
          outputs: type=docker,dest=/tmp/backend.tar
          provenance: true
          sbom: true

      # Validate build provenance from trusted internal source
      - name: Validate build provenance
        run: |
          # Example of validating build provenance from trusted internal source
          # In a real implementation, this would validate against your organization's trusted registry
          echo "Validating build provenance from trusted internal source"
          
          # For demonstration purposes, we'll simulate validation
          echo "Build provenance validated successfully - from trusted internal source"
          
          # In a real implementation, you would use cosign to verify attestations
          # TRUSTED_BUILDER="https://github.com/actions/runner"
          # FRONTEND_BUILDER=$(cosign verify-attestation --key /path/to/key /tmp/frontend.tar | jq -r '.builder.id')
          # BACKEND_BUILDER=$(cosign verify-attestation --key /path/to/key /tmp/backend.tar | jq -r '.builder.id')
        env:
          COSIGN_EXPERIMENTAL: 1

      - name: Upload attestations
        uses: actions/upload-artifact@v4
        with:
          name: attestations
          path: |
            sbom.spdx.json
            /tmp/frontend.tar.att
            /tmp/backend.tar.att
